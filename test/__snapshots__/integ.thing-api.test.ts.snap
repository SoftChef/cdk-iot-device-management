// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`minimal usage 1`] = `
Object {
  "Outputs": Object {
    "ThingApiThingRestApiEndpoint04BF5D13": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ThingApiThingRestApi8AD2DCAF",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84ArtifactHash42A2A271": Object {
      "Description": "Artifact hash for asset \\"02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84\\"",
      "Type": "String",
    },
    "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84S3Bucket5CF132E6": Object {
      "Description": "S3 bucket for asset \\"02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84\\"",
      "Type": "String",
    },
    "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84S3VersionKey9B3D2F97": Object {
      "Description": "S3 key for asset version \\"02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84\\"",
      "Type": "String",
    },
    "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2ArtifactHashD388E3CC": Object {
      "Description": "Artifact hash for asset \\"254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2\\"",
      "Type": "String",
    },
    "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2S3Bucket202D77A1": Object {
      "Description": "S3 bucket for asset \\"254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2\\"",
      "Type": "String",
    },
    "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2S3VersionKeyBA944F16": Object {
      "Description": "S3 key for asset version \\"254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2\\"",
      "Type": "String",
    },
    "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdArtifactHash5EEE02C5": Object {
      "Description": "Artifact hash for asset \\"2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbd\\"",
      "Type": "String",
    },
    "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdS3Bucket2B5671A9": Object {
      "Description": "S3 bucket for asset \\"2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbd\\"",
      "Type": "String",
    },
    "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdS3VersionKey398B4448": Object {
      "Description": "S3 key for asset version \\"2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbd\\"",
      "Type": "String",
    },
    "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbArtifactHash340494F5": Object {
      "Description": "Artifact hash for asset \\"70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fb\\"",
      "Type": "String",
    },
    "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbS3Bucket8987CD82": Object {
      "Description": "S3 bucket for asset \\"70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fb\\"",
      "Type": "String",
    },
    "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbS3VersionKey806C7F8A": Object {
      "Description": "S3 key for asset version \\"70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fb\\"",
      "Type": "String",
    },
    "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308ArtifactHashA2882608": Object {
      "Description": "Artifact hash for asset \\"937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308\\"",
      "Type": "String",
    },
    "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308S3Bucket6797FC73": Object {
      "Description": "S3 bucket for asset \\"937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308\\"",
      "Type": "String",
    },
    "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308S3VersionKeyCE3FB871": Object {
      "Description": "S3 key for asset version \\"937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308\\"",
      "Type": "String",
    },
    "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aArtifactHashCEDAE61A": Object {
      "Description": "Artifact hash for asset \\"9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659a\\"",
      "Type": "String",
    },
    "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aS3BucketD218217C": Object {
      "Description": "S3 bucket for asset \\"9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659a\\"",
      "Type": "String",
    },
    "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aS3VersionKeyB904DD7B": Object {
      "Description": "S3 key for asset version \\"9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659a\\"",
      "Type": "String",
    },
    "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5ArtifactHash68BE1EBF": Object {
      "Description": "Artifact hash for asset \\"9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5\\"",
      "Type": "String",
    },
    "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5S3BucketFB9A61BC": Object {
      "Description": "S3 bucket for asset \\"9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5\\"",
      "Type": "String",
    },
    "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5S3VersionKeyEF99D244": Object {
      "Description": "S3 key for asset version \\"9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5\\"",
      "Type": "String",
    },
    "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81ArtifactHash90419976": Object {
      "Description": "Artifact hash for asset \\"e068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81\\"",
      "Type": "String",
    },
    "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81S3Bucket6B475E8B": Object {
      "Description": "S3 bucket for asset \\"e068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81\\"",
      "Type": "String",
    },
    "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81S3VersionKeyB2A58599": Object {
      "Description": "S3 key for asset version \\"e068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81\\"",
      "Type": "String",
    },
    "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736ArtifactHashB865A6EA": Object {
      "Description": "Artifact hash for asset \\"fa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736\\"",
      "Type": "String",
    },
    "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736S3Bucket96905C90": Object {
      "Description": "S3 bucket for asset \\"fa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736\\"",
      "Type": "String",
    },
    "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736S3VersionKey39DAFABE": Object {
      "Description": "S3 key for asset version \\"fa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ThingApiCreateThingFunctionE7C71A6E": Object {
      "DependsOn": Array [
        "ThingApiCreateThingFunctionServiceRoleF76C80DC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84S3Bucket5CF132E6",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84S3VersionKey9B3D2F97",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters02b179b4734f82fa38eafdee4ed143c5aae11b5b4d00fa79fde35916024a8b84S3VersionKey9B3D2F97",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiCreateThingFunctionServiceRoleF76C80DC",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiCreateThingFunctionServiceRoleF76C80DC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiDeleteThingFunction0B6C1AEE": Object {
      "DependsOn": Array [
        "ThingApiDeleteThingFunctionServiceRoleECF4C781",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81S3Bucket6B475E8B",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81S3VersionKeyB2A58599",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse068fad9069c77e8ca0e9de24237fc57a05ef077bc91fed7de4c658b657c2b81S3VersionKeyB2A58599",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingFunctionServiceRoleECF4C781",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiDeleteThingFunctionServiceRoleECF4C781": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiDeleteThingShadowFunction6D567170": Object {
      "DependsOn": Array [
        "ThingApiDeleteThingShadowFunctionServiceRole013D19BA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5S3BucketFB9A61BC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5S3VersionKeyEF99D244",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9b32c27facdc21d23b3bc15298607cd3902cc84f65c7695b6eca4fe80e9f4fa5S3VersionKeyEF99D244",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingShadowFunctionServiceRole013D19BA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiDeleteThingShadowFunctionServiceRole013D19BA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiGetThingFunction01DEEBC1": Object {
      "DependsOn": Array [
        "ThingApiGetThingFunctionServiceRoleA6E745D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308S3Bucket6797FC73",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308S3VersionKeyCE3FB871",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters937ab2fa560a3267ed83e8d2fcf61d17af60f0baf4ba00f9c3b21cd62f6f4308S3VersionKeyCE3FB871",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingFunctionServiceRoleA6E745D2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiGetThingFunctionServiceRoleA6E745D2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiGetThingShadowFunction997DA57E": Object {
      "DependsOn": Array [
        "ThingApiGetThingShadowFunctionServiceRole0EDFAE2B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbS3Bucket8987CD82",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbS3VersionKey806C7F8A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters70a3781f97c5f70559c906f3f991465d1e5b0b1be4dabca6f8599d532d74a6fbS3VersionKey806C7F8A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingShadowFunctionServiceRole0EDFAE2B",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiGetThingShadowFunctionServiceRole0EDFAE2B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiListThingShadowsFunctionD97848ED": Object {
      "DependsOn": Array [
        "ThingApiListThingShadowsFunctionServiceRoleAC9C364C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2S3Bucket202D77A1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2S3VersionKeyBA944F16",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters254a6e9ba306d48311729a89c25efe5e37ea8141c4612e7c00d46a84eb3a9ea2S3VersionKeyBA944F16",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingShadowsFunctionServiceRoleAC9C364C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiListThingShadowsFunctionServiceRoleAC9C364C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiListThingsFunctionE46CCF50": Object {
      "DependsOn": Array [
        "ThingApiListThingsFunctionServiceRoleF1D8A60D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdS3Bucket2B5671A9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdS3VersionKey398B4448",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2f13fa42427d5351e71fad57adca66e932b3c39da7c3de80fa3a62466c29bcbdS3VersionKey398B4448",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingsFunctionServiceRoleF1D8A60D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiListThingsFunctionServiceRoleF1D8A60D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiThingRestApi8AD2DCAF": Object {
      "Properties": Object {
        "Name": "ThingRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ThingApiThingRestApiAccount7363B3E4": Object {
      "DependsOn": Array [
        "ThingApiThingRestApi8AD2DCAF",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ThingApiThingRestApiCloudWatchRole19B172F1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ThingApiThingRestApiCloudWatchRole19B172F1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiThingRestApiDeployment4169928F89de9456258707d8d0921d4e7effe743": Object {
      "DependsOn": Array [
        "ThingApiThingRestApiOPTIONSC8F1BDFB",
        "ThingApiThingRestApithingsthingNameDELETE12EB1F23",
        "ThingApiThingRestApithingsthingNameGET2501A147",
        "ThingApiThingRestApithingsthingNameOPTIONSEE104B92",
        "ThingApiThingRestApithingsthingNamePUT7982A87C",
        "ThingApiThingRestApithingsthingNameEAB448EB",
        "ThingApiThingRestApithingsthingNameshadowsshadowNameDELETE0D04BD70",
        "ThingApiThingRestApithingsthingNameshadowsshadowNameGET71BE982B",
        "ThingApiThingRestApithingsthingNameshadowsshadowNameOPTIONS226B5C93",
        "ThingApiThingRestApithingsthingNameshadowsshadowNamePUT373EF5D9",
        "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B",
        "ThingApiThingRestApithingsthingNameshadowsGET685CA59B",
        "ThingApiThingRestApithingsthingNameshadowsOPTIONS877FA57F",
        "ThingApiThingRestApithingsthingNameshadows60732688",
        "ThingApiThingRestApithingsGET7EA35A48",
        "ThingApiThingRestApithingsOPTIONSD3385475",
        "ThingApiThingRestApithingsPOSTC12C7790",
        "ThingApiThingRestApithingsA1F2876B",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ThingApiThingRestApiDeploymentStageprodFDA980A2": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ThingApiThingRestApiDeployment4169928F89de9456258707d8d0921d4e7effe743",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ThingApiThingRestApiOPTIONSC8F1BDFB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ThingApiThingRestApi8AD2DCAF",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsA1F2876B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ThingApiThingRestApi8AD2DCAF",
            "RootResourceId",
          ],
        },
        "PathPart": "things",
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingApiThingRestApithingsGET7EA35A48": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiListThingsFunctionE46CCF50",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsA1F2876B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsGETApiPermissionTestdemostackThingApiThingRestApi104F4060GETthings3038B23C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingsFunctionE46CCF50",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/GET/things",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsGETApiPermissiondemostackThingApiThingRestApi104F4060GETthingsB8032D18": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingsFunctionE46CCF50",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/GET/things",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsOPTIONSD3385475": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsA1F2876B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsPOSTApiPermissionTestdemostackThingApiThingRestApi104F4060POSTthings896D1EAA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiCreateThingFunctionE7C71A6E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/POST/things",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsPOSTApiPermissiondemostackThingApiThingRestApi104F4060POSTthings6AC13972": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiCreateThingFunctionE7C71A6E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/POST/things",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsPOSTC12C7790": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiCreateThingFunctionE7C71A6E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsA1F2876B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameDELETE12EB1F23": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiDeleteThingFunction0B6C1AEE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameEAB448EB",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameDELETEApiPermissionTestdemostackThingApiThingRestApi104F4060DELETEthingsthingName34512E71": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingFunction0B6C1AEE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/DELETE/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameDELETEApiPermissiondemostackThingApiThingRestApi104F4060DELETEthingsthingName66382F24": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingFunction0B6C1AEE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/DELETE/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameEAB448EB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingApiThingRestApithingsA1F2876B",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingApiThingRestApithingsthingNameGET2501A147": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiGetThingFunction01DEEBC1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameEAB448EB",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameGETApiPermissionTestdemostackThingApiThingRestApi104F4060GETthingsthingName3244D930": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingFunction01DEEBC1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/GET/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameGETApiPermissiondemostackThingApiThingRestApi104F4060GETthingsthingNameCA4E8142": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingFunction01DEEBC1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/GET/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameOPTIONSEE104B92": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameEAB448EB",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNamePUT7982A87C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiUpdateThingFunction97D69109",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameEAB448EB",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNamePUTApiPermissionTestdemostackThingApiThingRestApi104F4060PUTthingsthingName6F0ADE71": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingFunction97D69109",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/PUT/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNamePUTApiPermissiondemostackThingApiThingRestApi104F4060PUTthingsthingNameF354504A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingFunction97D69109",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/PUT/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadows60732688": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameEAB448EB",
        },
        "PathPart": "shadows",
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingApiThingRestApithingsthingNameshadowsGET685CA59B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiListThingShadowsFunctionD97848ED",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadows60732688",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsGETApiPermissionTestdemostackThingApiThingRestApi104F4060GETthingsthingNameshadowsAF1399C5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingShadowsFunctionD97848ED",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/GET/things/*/shadows",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsGETApiPermissiondemostackThingApiThingRestApi104F4060GETthingsthingNameshadowsEC2A0AA3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiListThingShadowsFunctionD97848ED",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/GET/things/*/shadows",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsOPTIONS877FA57F": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadows60732688",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadows60732688",
        },
        "PathPart": "{shadowName}",
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameDELETE0D04BD70": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiDeleteThingShadowFunction6D567170",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameDELETEApiPermissionTestdemostackThingApiThingRestApi104F4060DELETEthingsthingNameshadowsshadowNameF4643486": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingShadowFunction6D567170",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/DELETE/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameDELETEApiPermissiondemostackThingApiThingRestApi104F4060DELETEthingsthingNameshadowsshadowNameBF0F262A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiDeleteThingShadowFunction6D567170",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/DELETE/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameGET71BE982B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiGetThingShadowFunction997DA57E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameGETApiPermissionTestdemostackThingApiThingRestApi104F4060GETthingsthingNameshadowsshadowNameC046D97C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingShadowFunction997DA57E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/GET/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameGETApiPermissiondemostackThingApiThingRestApi104F4060GETthingsthingNameshadowsshadowName577CE34A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiGetThingShadowFunction997DA57E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/GET/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNameOPTIONS226B5C93": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNamePUT373EF5D9": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingApiUpdateThingShadowFunction666CF74D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingApiThingRestApithingsthingNameshadowsshadowName85DF413B",
        },
        "RestApiId": Object {
          "Ref": "ThingApiThingRestApi8AD2DCAF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNamePUTApiPermissionTestdemostackThingApiThingRestApi104F4060PUTthingsthingNameshadowsshadowNameAECCF760": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingShadowFunction666CF74D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/test-invoke-stage/PUT/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiThingRestApithingsthingNameshadowsshadowNamePUTApiPermissiondemostackThingApiThingRestApi104F4060PUTthingsthingNameshadowsshadowName4818B071": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingShadowFunction666CF74D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingApiThingRestApi8AD2DCAF",
              },
              "/",
              Object {
                "Ref": "ThingApiThingRestApiDeploymentStageprodFDA980A2",
              },
              "/PUT/things/*/shadows/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingApiUpdateThingFunction97D69109": Object {
      "DependsOn": Array [
        "ThingApiUpdateThingFunctionServiceRole428DBB63",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736S3Bucket96905C90",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736S3VersionKey39DAFABE",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfa789e90a77f601d8b020870f2eddd705350fa98b073dbe6ed030ad2dd822736S3VersionKey39DAFABE",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingFunctionServiceRole428DBB63",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiUpdateThingFunctionServiceRole428DBB63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiUpdateThingShadowFunction666CF74D": Object {
      "DependsOn": Array [
        "ThingApiUpdateThingShadowFunctionServiceRoleC4BCE4CB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aS3BucketD218217C",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aS3VersionKeyB904DD7B",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9882de8cc7f7f00768f12aa80b106b2a168d8d6a98b6d06a26d990adce4b659aS3VersionKeyB904DD7B",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingApiUpdateThingShadowFunctionServiceRoleC4BCE4CB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingApiUpdateThingShadowFunctionServiceRoleC4BCE4CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingApiiotcreatethingpolicyF8B0442E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:CreateThing",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotcreatethingpolicyF8B0442E",
        "Roles": Array [
          Object {
            "Ref": "ThingApiCreateThingFunctionServiceRoleF76C80DC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotdeletethingpolicyC3B3425D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DeleteThing",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotdeletethingpolicyC3B3425D",
        "Roles": Array [
          Object {
            "Ref": "ThingApiDeleteThingFunctionServiceRoleECF4C781",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotdeletethingshadowpolicy673122BE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DeleteThingShadow",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotdeletethingshadowpolicy673122BE",
        "Roles": Array [
          Object {
            "Ref": "ThingApiDeleteThingShadowFunctionServiceRole013D19BA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotdescribethingpolicy2029A49B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DescribeThing",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotdescribethingpolicy2029A49B",
        "Roles": Array [
          Object {
            "Ref": "ThingApiGetThingFunctionServiceRoleA6E745D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotgetthingshadowpolicyB2EDC596": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:GetThingShadow",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotgetthingshadowpolicyB2EDC596",
        "Roles": Array [
          Object {
            "Ref": "ThingApiGetThingShadowFunctionServiceRole0EDFAE2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotlistthingshadowspolicyA2220835": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:ListNamedShadowsForThing",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotlistthingshadowspolicyA2220835",
        "Roles": Array [
          Object {
            "Ref": "ThingApiListThingShadowsFunctionServiceRoleAC9C364C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotlistthingspolicyFE66B0B1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:ListThings",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotlistthingspolicyFE66B0B1",
        "Roles": Array [
          Object {
            "Ref": "ThingApiListThingsFunctionServiceRoleF1D8A60D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotupdatethingpolicy465AE9D7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:UpdateThing",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotupdatethingpolicy465AE9D7",
        "Roles": Array [
          Object {
            "Ref": "ThingApiUpdateThingFunctionServiceRole428DBB63",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingApiiotupdatethingshadowpolicyE41AFFD3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:UpdateThingShadow",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingApiiotupdatethingshadowpolicyE41AFFD3",
        "Roles": Array [
          Object {
            "Ref": "ThingApiUpdateThingShadowFunctionServiceRoleC4BCE4CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
