// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`minimal usage 1`] = `
Object {
  "Outputs": Object {
    "ThingGroupApiThingGroupRestApiEndpoint0B2B9489": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815ArtifactHashAF785342": Object {
      "Description": "Artifact hash for asset \\"03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815\\"",
      "Type": "String",
    },
    "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815S3Bucket29627232": Object {
      "Description": "S3 bucket for asset \\"03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815\\"",
      "Type": "String",
    },
    "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815S3VersionKey22D2CD6E": Object {
      "Description": "S3 key for asset version \\"03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815\\"",
      "Type": "String",
    },
    "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7ArtifactHash5485FE8A": Object {
      "Description": "Artifact hash for asset \\"1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7\\"",
      "Type": "String",
    },
    "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7S3Bucket3BB298A3": Object {
      "Description": "S3 bucket for asset \\"1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7\\"",
      "Type": "String",
    },
    "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7S3VersionKey598B76B6": Object {
      "Description": "S3 key for asset version \\"1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7\\"",
      "Type": "String",
    },
    "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2ArtifactHashDE6263B7": Object {
      "Description": "Artifact hash for asset \\"555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2\\"",
      "Type": "String",
    },
    "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2S3BucketA57CFEE1": Object {
      "Description": "S3 bucket for asset \\"555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2\\"",
      "Type": "String",
    },
    "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2S3VersionKey058939E4": Object {
      "Description": "S3 key for asset version \\"555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2\\"",
      "Type": "String",
    },
    "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccArtifactHash535D1C42": Object {
      "Description": "Artifact hash for asset \\"6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19cc\\"",
      "Type": "String",
    },
    "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccS3Bucket5AAC6111": Object {
      "Description": "S3 bucket for asset \\"6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19cc\\"",
      "Type": "String",
    },
    "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccS3VersionKey497D69FE": Object {
      "Description": "S3 key for asset version \\"6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19cc\\"",
      "Type": "String",
    },
    "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beArtifactHashC515C4A8": Object {
      "Description": "Artifact hash for asset \\"75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39be\\"",
      "Type": "String",
    },
    "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beS3Bucket8893E0E0": Object {
      "Description": "S3 bucket for asset \\"75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39be\\"",
      "Type": "String",
    },
    "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beS3VersionKey9F964EB2": Object {
      "Description": "S3 key for asset version \\"75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39be\\"",
      "Type": "String",
    },
    "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8ArtifactHashE94658A7": Object {
      "Description": "Artifact hash for asset \\"881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8\\"",
      "Type": "String",
    },
    "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8S3Bucket09F13B00": Object {
      "Description": "S3 bucket for asset \\"881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8\\"",
      "Type": "String",
    },
    "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8S3VersionKey774FC7C7": Object {
      "Description": "S3 key for asset version \\"881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8\\"",
      "Type": "String",
    },
    "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710ArtifactHash0EF15681": Object {
      "Description": "Artifact hash for asset \\"af89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710\\"",
      "Type": "String",
    },
    "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710S3Bucket53D681EE": Object {
      "Description": "S3 bucket for asset \\"af89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710\\"",
      "Type": "String",
    },
    "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710S3VersionKey77A781A2": Object {
      "Description": "S3 key for asset version \\"af89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710\\"",
      "Type": "String",
    },
    "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10ArtifactHash5E40D95D": Object {
      "Description": "Artifact hash for asset \\"e56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10\\"",
      "Type": "String",
    },
    "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10S3BucketD5CD72E4": Object {
      "Description": "S3 bucket for asset \\"e56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10\\"",
      "Type": "String",
    },
    "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10S3VersionKey47757BDB": Object {
      "Description": "S3 key for asset version \\"e56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10\\"",
      "Type": "String",
    },
    "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cArtifactHash20CEBADA": Object {
      "Description": "Artifact hash for asset \\"eca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8c\\"",
      "Type": "String",
    },
    "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cS3Bucket990E9610": Object {
      "Description": "S3 bucket for asset \\"eca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8c\\"",
      "Type": "String",
    },
    "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cS3VersionKey31564840": Object {
      "Description": "S3 key for asset version \\"eca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8c\\"",
      "Type": "String",
    },
    "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229ArtifactHash4E7DE6D2": Object {
      "Description": "Artifact hash for asset \\"fe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229\\"",
      "Type": "String",
    },
    "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229S3BucketBBC6F122": Object {
      "Description": "S3 bucket for asset \\"fe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229\\"",
      "Type": "String",
    },
    "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229S3VersionKeyA02BACF0": Object {
      "Description": "S3 key for asset version \\"fe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ThingGroupApiAddThingToThingGroupFunctionF4A159AF": Object {
      "DependsOn": Array [
        "ThingGroupApiAddThingToThingGroupFunctionServiceRoleEBD59FAC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8S3Bucket09F13B00",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8S3VersionKey774FC7C7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters881a2707c6ecb9478578c5ac68238efdec33090c279532bf57af3ffc3423caa8S3VersionKey774FC7C7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiAddThingToThingGroupFunctionServiceRoleEBD59FAC",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiAddThingToThingGroupFunctionServiceRoleEBD59FAC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiCreateDynamicThingGroupFunctionC67540C8": Object {
      "DependsOn": Array [
        "ThingGroupApiCreateDynamicThingGroupFunctionServiceRoleB8CB9456",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2S3BucketA57CFEE1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2S3VersionKey058939E4",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters555eee0e44f7f2231a96c2127f02f9a5bff99038a738419d24f3b4015e8e5cc2S3VersionKey058939E4",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateDynamicThingGroupFunctionServiceRoleB8CB9456",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiCreateDynamicThingGroupFunctionServiceRoleB8CB9456": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiCreateThingGroupFunction7445B8C6": Object {
      "DependsOn": Array [
        "ThingGroupApiCreateThingGroupFunctionServiceRoleFF9C912C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229S3BucketBBC6F122",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229S3VersionKeyA02BACF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfe87ca73fb352006d1c38b1e29fc89139b30cf68f953de24c638850b39d84229S3VersionKeyA02BACF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateThingGroupFunctionServiceRoleFF9C912C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiCreateThingGroupFunctionServiceRoleFF9C912C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiDeleteDynamicThingGroupFunction8D13A81F": Object {
      "DependsOn": Array [
        "ThingGroupApiDeleteDynamicThingGroupFunctionServiceRole287BF546",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beS3Bucket8893E0E0",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beS3VersionKey9F964EB2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters75acb779cb31ec583457e42a571115575d285847d0809a6effbdac41896b39beS3VersionKey9F964EB2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteDynamicThingGroupFunctionServiceRole287BF546",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiDeleteDynamicThingGroupFunctionServiceRole287BF546": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiDeleteThingGroupFunction08F04E41": Object {
      "DependsOn": Array [
        "ThingGroupApiDeleteThingGroupFunctionServiceRole8D37D199",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cS3Bucket990E9610",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cS3VersionKey31564840",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterseca5826002d42f7fb83ee06fbca537249830df4fa1a3edf556ca0ea4a15a4a8cS3VersionKey31564840",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteThingGroupFunctionServiceRole8D37D199",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiDeleteThingGroupFunctionServiceRole8D37D199": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiGetThingGroupFunctionB4D168DF": Object {
      "DependsOn": Array [
        "ThingGroupApiGetThingGroupFunctionServiceRole80688DA1",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710S3Bucket53D681EE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710S3VersionKey77A781A2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersaf89c3942e7d0910e2a457dd4f4813d1ad0a7675429f94ea956cb7bf9c02c710S3VersionKey77A781A2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiGetThingGroupFunctionServiceRole80688DA1",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiGetThingGroupFunctionServiceRole80688DA1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiListThingGroupsFunction626B079A": Object {
      "DependsOn": Array [
        "ThingGroupApiListThingGroupsFunctionServiceRole8A98D7BD",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7S3Bucket3BB298A3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7S3VersionKey598B76B6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1b43564f6165604d5cdf668e99d1d41556f64bd9894e81af09537e75b3a4cda7S3VersionKey598B76B6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiListThingGroupsFunctionServiceRole8A98D7BD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiListThingGroupsFunctionServiceRole8A98D7BD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiRemoveThingFromThingGroupFunction93A1EA24": Object {
      "DependsOn": Array [
        "ThingGroupApiRemoveThingFromThingGroupFunctionServiceRoleD8AB0AC9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815S3Bucket29627232",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815S3VersionKey22D2CD6E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters03008cc2801caef0b8d414cff636c97ad51560c190308ae9a66e9ce11c09c815S3VersionKey22D2CD6E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiRemoveThingFromThingGroupFunctionServiceRoleD8AB0AC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiRemoveThingFromThingGroupFunctionServiceRoleD8AB0AC9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiThingGroupRestApiAccount186D0DC5": Object {
      "DependsOn": Array [
        "ThingGroupApiThingGroupRestApiCB757BF2",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiThingGroupRestApiCloudWatchRoleC1A9E0BE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ThingGroupApiThingGroupRestApiCB757BF2": Object {
      "Properties": Object {
        "Name": "ThingGroupRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ThingGroupApiThingGroupRestApiCloudWatchRoleC1A9E0BE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiThingGroupRestApiDeploymentC78F614Aa6313a5a68115be99718efffaf3bfdfd": Object {
      "DependsOn": Array [
        "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameDELETE903E413C",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameOPTIONS5C3F137C",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNamePUT17AD747E",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupName8C421BEF",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsOPTIONSFF4C74AF",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsPOST84B6A047",
        "ThingGroupApiThingGroupRestApidynamicthinggroupsC4ED8E6C",
        "ThingGroupApiThingGroupRestApiOPTIONS48D1B8B9",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameDELETEE20337F4",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameGETEAE9C91C",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameOPTIONSD263A5AE",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamePUTAA86708A",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameDELETEB84CDAEA",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameOPTIONS35C12128",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNamePUT76D4E59F",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingName3C02E972",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsOPTIONSE3AB95CB",
        "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethings0C0DA311",
        "ThingGroupApiThingGroupRestApithinggroupsGET819E4255",
        "ThingGroupApiThingGroupRestApithinggroupsOPTIONS5AC22982",
        "ThingGroupApiThingGroupRestApithinggroupsPOST39B60BAA",
        "ThingGroupApiThingGroupRestApithinggroups24E29853",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiDeploymentC78F614Aa6313a5a68115be99718efffaf3bfdfd",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ThingGroupApiThingGroupRestApiOPTIONS48D1B8B9": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiThingGroupRestApiCB757BF2",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsC4ED8E6C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiThingGroupRestApiCB757BF2",
            "RootResourceId",
          ],
        },
        "PathPart": "dynamic-thing-groups",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsOPTIONSFF4C74AF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsC4ED8E6C",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsPOST84B6A047": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiCreateDynamicThingGroupFunctionC67540C8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsC4ED8E6C",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsPOSTApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DPOSTdynamicthinggroups2FDECC90": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateDynamicThingGroupFunctionC67540C8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/POST/dynamic-thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsPOSTApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DPOSTdynamicthinggroupsD0E9501C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateDynamicThingGroupFunctionC67540C8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/POST/dynamic-thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupName8C421BEF": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsC4ED8E6C",
        },
        "PathPart": "{thingGroupName}",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameDELETE903E413C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiDeleteDynamicThingGroupFunction8D13A81F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupName8C421BEF",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameDELETEApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DDELETEdynamicthinggroupsthingGroupName9BF1DD1B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteDynamicThingGroupFunction8D13A81F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/DELETE/dynamic-thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameDELETEApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DDELETEdynamicthinggroupsthingGroupNameF23E43C9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteDynamicThingGroupFunction8D13A81F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/DELETE/dynamic-thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNameOPTIONS5C3F137C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupName8C421BEF",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNamePUT17AD747E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiUpdateDynamicThingGroupFunction3CEE9758",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupName8C421BEF",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNamePUTApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DPUTdynamicthinggroupsthingGroupNameC33BC4A9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateDynamicThingGroupFunction3CEE9758",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/PUT/dynamic-thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApidynamicthinggroupsthingGroupNamePUTApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DPUTdynamicthinggroupsthingGroupName3D38EEED": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateDynamicThingGroupFunction3CEE9758",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/PUT/dynamic-thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroups24E29853": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiThingGroupRestApiCB757BF2",
            "RootResourceId",
          ],
        },
        "PathPart": "thing-groups",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApithinggroupsGET819E4255": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiListThingGroupsFunction626B079A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroups24E29853",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsGETApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DGETthinggroupsFB14F32F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiListThingGroupsFunction626B079A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/GET/thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsGETApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DGETthinggroupsBC5785E2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiListThingGroupsFunction626B079A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/GET/thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsOPTIONS5AC22982": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroups24E29853",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsPOST39B60BAA": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiCreateThingGroupFunction7445B8C6",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroups24E29853",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsPOSTApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DPOSTthinggroups26F742A4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateThingGroupFunction7445B8C6",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/POST/thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsPOSTApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DPOSTthinggroups54E65162": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiCreateThingGroupFunction7445B8C6",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/POST/thing-groups",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameDELETEApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DDELETEthinggroupsthingGroupNameAF7F875F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteThingGroupFunction08F04E41",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/DELETE/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameDELETEApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DDELETEthinggroupsthingGroupName31231D46": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiDeleteThingGroupFunction08F04E41",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/DELETE/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameDELETEE20337F4": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiDeleteThingGroupFunction08F04E41",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroups24E29853",
        },
        "PathPart": "{thingGroupName}",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameGETApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DGETthinggroupsthingGroupNameCF20F512": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiGetThingGroupFunctionB4D168DF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/GET/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameGETApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DGETthinggroupsthingGroupName0A02A3FA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiGetThingGroupFunctionB4D168DF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/GET/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameGETEAE9C91C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiGetThingGroupFunctionB4D168DF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameOPTIONSD263A5AE": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamePUTAA86708A": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiUpdateThingGroupFunctionC3E79424",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamePUTApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DPUTthinggroupsthingGroupName0872AC08": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateThingGroupFunctionC3E79424",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/PUT/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamePUTApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DPUTthinggroupsthingGroupName5D65766E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateThingGroupFunctionC3E79424",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/PUT/thing-groups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethings0C0DA311": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNameF0A6E81A",
        },
        "PathPart": "things",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsOPTIONSE3AB95CB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethings0C0DA311",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingName3C02E972": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethings0C0DA311",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameDELETEApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DDELETEthinggroupsthingGroupNamethingsthingName3C5E4BEA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiRemoveThingFromThingGroupFunction93A1EA24",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/DELETE/thing-groups/*/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameDELETEApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DDELETEthinggroupsthingGroupNamethingsthingName1A940741": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiRemoveThingFromThingGroupFunction93A1EA24",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/DELETE/thing-groups/*/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameDELETEB84CDAEA": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiRemoveThingFromThingGroupFunction93A1EA24",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingName3C02E972",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNameOPTIONS35C12128": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingName3C02E972",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNamePUT76D4E59F": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ThingGroupApiAddThingToThingGroupFunctionF4A159AF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingName3C02E972",
        },
        "RestApiId": Object {
          "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNamePUTApiPermissionTestdemostackThingGroupApiThingGroupRestApi6B98B78DPUTthinggroupsthingGroupNamethingsthingName50A0112F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiAddThingToThingGroupFunctionF4A159AF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/test-invoke-stage/PUT/thing-groups/*/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiThingGroupRestApithinggroupsthingGroupNamethingsthingNamePUTApiPermissiondemostackThingGroupApiThingGroupRestApi6B98B78DPUTthinggroupsthingGroupNamethingsthingName414D31CD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiAddThingToThingGroupFunctionF4A159AF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiCB757BF2",
              },
              "/",
              Object {
                "Ref": "ThingGroupApiThingGroupRestApiDeploymentStageprod50BAFA84",
              },
              "/PUT/thing-groups/*/things/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ThingGroupApiUpdateDynamicThingGroupFunction3CEE9758": Object {
      "DependsOn": Array [
        "ThingGroupApiUpdateDynamicThingGroupFunctionServiceRole94D7BEC3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccS3Bucket5AAC6111",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccS3VersionKey497D69FE",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6772e8733bdce5c2972764c1499e7afa9680042f2074d44e05386a7b4d5c19ccS3VersionKey497D69FE",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateDynamicThingGroupFunctionServiceRole94D7BEC3",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiUpdateDynamicThingGroupFunctionServiceRole94D7BEC3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiUpdateThingGroupFunctionC3E79424": Object {
      "DependsOn": Array [
        "ThingGroupApiUpdateThingGroupFunctionServiceRole39DC05F4",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10S3BucketD5CD72E4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10S3VersionKey47757BDB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse56858301917d0596d354b3e24b2b6db00a67ac2dccd18f9d48731f042f01a10S3VersionKey47757BDB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ThingGroupApiUpdateThingGroupFunctionServiceRole39DC05F4",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ThingGroupApiUpdateThingGroupFunctionServiceRole39DC05F4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ThingGroupApiiotaddthingtothinggrouppolicy330A6FD8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:AddThingToThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotaddthingtothinggrouppolicy330A6FD8",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiAddThingToThingGroupFunctionServiceRoleEBD59FAC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotcreatedynamicthinggrouppolicy3239BF3E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:CreateDynamicThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotcreatedynamicthinggrouppolicy3239BF3E",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiCreateDynamicThingGroupFunctionServiceRoleB8CB9456",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotcreatethinggrouppolicy16DC8197": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:CreateThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotcreatethinggrouppolicy16DC8197",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiCreateThingGroupFunctionServiceRoleFF9C912C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotdeletedynamicthinggrouppolicyC88692C6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DeleteDynamicThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotdeletedynamicthinggrouppolicyC88692C6",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiDeleteDynamicThingGroupFunctionServiceRole287BF546",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotdeletethinggrouppolicy3741DF5D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DeleteThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotdeletethinggrouppolicy3741DF5D",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiDeleteThingGroupFunctionServiceRole8D37D199",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotdescribethinggrouppolicyD42BA821": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DescribeThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotdescribethinggrouppolicyD42BA821",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiGetThingGroupFunctionServiceRole80688DA1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotlistthingspolicy91AE084B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:ListThingGroups",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotlistthingspolicy91AE084B",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiListThingGroupsFunctionServiceRole8A98D7BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotremovethingfromthinggrouppolicy818DE0C7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:RemoveThingFromThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotremovethingfromthinggrouppolicy818DE0C7",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiRemoveThingFromThingGroupFunctionServiceRoleD8AB0AC9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotupdatedynamicthinggrouppolicy614ADD4F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:UpdateDynamicThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotupdatedynamicthinggrouppolicy614ADD4F",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiUpdateDynamicThingGroupFunctionServiceRole94D7BEC3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ThingGroupApiiotupdatethinggrouppolicy3378B146": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:UpdateThingGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ThingGroupApiiotupdatethinggrouppolicy3378B146",
        "Roles": Array [
          Object {
            "Ref": "ThingGroupApiUpdateThingGroupFunctionServiceRole39DC05F4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
